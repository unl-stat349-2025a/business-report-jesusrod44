---
title: "Results"
editor: visual
---

# Results

## Tornadoes that form over water (also known as "Waterspouts") in shark-infested waters, *that also* move inwards towards land, do not have the potential to carry sharks over towards mainland cities to cause a disruption similar to the movie 'Sharknado'

When plotting the data for sharks and waterspouts, it is apparent that waterspouts are not a common occurrence ( at least in the past five years ). These waterspouts have not caused any major damage to property or crops, and no deaths or injuries have been recorded, they either do not possess the strength to do so and many of these waterspouts do not last longer than an hour. The most action that has happened has been an incident where a waterspout damaged two vehicles and a power line, causing \$5000 in damages. But when compared to tornadoes, this is very minuscule (See Figure 1). This clearly shows that tornadoes that form on water lack the power necessary to lift sharks. 

In a perfect world, the better way to compare power is to compare levels on the Tor EF Scale. The scale that ranks how strong a tornado is from EF1 to EF5. However, waterspouts are not considered tornadoes and they do not have a power scale similar to tornadoes.

```{r, echo=FALSE, output=FALSE, message = F, warning = F}
#| label: Load neccessary libraries 
library(ggplot2)
library(readr)
library(readxl)
library(sf)
library(dplyr)
library(tidyverse)
library(stringr)
library(mapdata)
library(maps)
library(knitr)
library(patchwork)
```

```{r, echo = FALSE,output = FALSE, message = F, warning = F}
#| label: Load Tornado Data from NOAA
tornado_2020_2024_dataframe <- bind_rows(
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2024_c20250216.csv"),
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2023_c20250216.csv"), 
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2022_c20241121.csv"), 
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2021_c20240716.csv"), 
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2020_c20240620.csv"))
```

```{r, echo = FALSE, output = FALSE}
#| label: Cleaning Tornado Data
# Remove rows containing NA values and Keep the two events we are interested in
tornado_2020_2024_clean_dataframe <- tornado_2020_2024_dataframe %>% 
  drop_na(BEGIN_LAT, BEGIN_LON, END_LON, END_LAT) %>% 
  filter(str_detect(EVENT_TYPE, "Tornado") | str_detect(EVENT_TYPE, "Waterspout"))
                                        
# Filter for Waterspouts
waterspout_dataframe <- tornado_2020_2024_clean_dataframe %>%
  filter(EVENT_TYPE == 'Waterspout')

# Filter for tornadic waterspouts
tornadic_waterspout_dataframe <- waterspout_dataframe %>%
  filter(str_detect(EVENT_NARRATIVE, 'tornad') | str_detect(EVENT_NARRATIVE, 'Tornad'))

# tornadoes only 
tornado_only_2020_2024_clean_dataframe <- tornado_2020_2024_dataframe %>% 
  drop_na(BEGIN_LAT, BEGIN_LON, END_LON, END_LAT) %>% 
  filter(EVENT_TYPE == 'Tornado') %>% 
  filter(TOR_F_SCALE %in% c('EF1', 'EF2', 'EF3', 'EF4', 'EF5'))


```

```{r, echo = FALSE, output = FALSE, warning = F, message = F}
#| label: Data Wrangling to get Average Property Damage Chart
str(tornado_2020_2024_clean_dataframe)

tornado_2020_2024_clean_dataframe <- tornado_2020_2024_clean_dataframe %>%
  mutate(DAMAGE_PROPERTY = case_when(
    str_detect(DAMAGE_PROPERTY, "K$") ~ as.numeric(str_remove(DAMAGE_PROPERTY, "K")) * 1000,
    str_detect(DAMAGE_PROPERTY, "M$") ~ as.numeric(str_remove(DAMAGE_PROPERTY, "M")) * 1000000,
    DAMAGE_PROPERTY == "0.0K" ~ 0, 
    TRUE ~ as.numeric(DAMAGE_PROPERTY)  
  )) 

property_damage_summary <- tornado_2020_2024_clean_dataframe %>%
  group_by(EVENT_TYPE) %>%
  summarize(Average_Property_Damage = mean(DAMAGE_PROPERTY, na.rm = TRUE))

```

```{r, echo = FALSE, message = F, warning = F}
#| label: Average Property Damage Caused by Tornadoes vs Waterspouts Chart

ggplot(property_damage_summary, aes(x = EVENT_TYPE, y = Average_Property_Damage)) + geom_col() + 
  labs( 
    title = "Average Property Damage by Tornadoes and Waterspouts",
    subtitle = "(2020-2024)",
    x = "Event Type", 
    y = "Cost of Damage ($)", 
    tag= "Figure 1", 
    caption = 'Waterspouts are very weak when compared to tornadoes. Their average in property damage is a $7.96.') + 
  theme_minimal()

```

Considering that tornadic waterspouts are not capable to cause much destruction, plotting them is still valuable to see just how common they are in the United States. Two maps (Figures 2 and 3) are given to see their distribution among the sharks around the coasts of the US and Hawaii. It is important to remember that these maps showcase only the more capable **tornadic** waterspouts. These kinds of waterspouts are the most common in Florida, while the rest of the United States lacks these specific types of events. Given they are relatively weak, rest can be assured that no sharknados can be possible from a waterspout.

```{r, echo = FALSE, output = FALSE, echo = FALSE}
#| label: Loading In Coastal Data
# coastal data
coastal_dataframe <- 
  read_sf("Datasets/Coastal Datasets/CZMP_counties_2009/CZMP_counties_2009.shp")

```

```{r, echo = FALSE, output = FALSE}
#| label: Getting the map to work
# Let's add a world map to see where those other coasts are from
world <- map_data('world')
states <- map_data('state')

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  theme_bw() +  
  geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe)
```

```{r, echo = FALSE, output = FALSE}
#| label: Getting a US Map
# Let's look at the US individually first, then Hawaii, then Alaska

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  theme_bw() +  
  geom_sf(aes(geometry = geometry), fill = 'red', color = 'red', data = coastal_dataframe) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 55))

```

```{r, echo=FALSE, warning=FALSE, output = FALSE}
#| label: Loading in Shark Data
shark_survey_dataframe <- read_excel("Datasets/Shark Datasets/NMFS BLL data Susan V.xlsx")
shark_dataframe <- read_csv("Datasets/Shark Datasets/Biological _Data_SBK.csv")
shark_incidents_california <- read_excel(
  "Datasets/Shark Datasets/SharkIncidents_1950_2022_220302.xlsx")
shark_hawaii <- st_read("Datasets/Shark Datasets/PACIOOS_WMS_ONLY-hi_pacioos_all_shark_tiger.kml")

```

```{r, echo = FALSE, output = FALSE}
#| label: Shark Dataset Cleaning 
shark_incidents_california <- shark_incidents_california %>% 
  filter(!is.na(Latitude))
shark_incidents_california$Longitude <- as.numeric(shark_incidents_california$Longitude)
str(shark_incidents_california)
```

```{r, echo = FALSE, warning=FALSE}
#| label: Path of Waterspouts in the US

# Now let's see the path of waterspouts in the US

######## waterspouts data

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  theme_bw() +  
  geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 55)) + 
  geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), fill = 'skyblue',alpha = 0.5, size = 0.5, data = shark_dataframe) +
  geom_point(aes(x = `Station Longitude`, y = `Station Latitude`, color = 'Shark'), fill = 'skyblue', alpha = 0.5, size = 0.6, data = shark_survey_dataframe) + 
  geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), fill = 'skyblue', alpha = 0.5, size = 0.6, data = shark_incidents_california) + 
  geom_segment(data = tornadic_waterspout_dataframe,aes(x = BEGIN_LON, y = BEGIN_LAT, 
                                                 xend = END_LON, yend = END_LAT, color = "Waterspout"),
               arrow = arrow(length = unit(0.05, "cm"))  # Optional arrow
               ) +
  geom_point(data = tornadic_waterspout_dataframe, aes(x = BEGIN_LON, y = BEGIN_LAT, color = "Waterspout"), 
             shape = 15,  # Square shape
             size = 0.1) +
  labs(title = "US Tornadic Waterspouts and Sharks Along US Coastlines",
       subtitle = '(2020-2024)',
       x = "Longitude",
       y = "Latitude", 
       color = "Legend",
       tag = "Figure 2", 
       caption = "Very little waterspouts are actually tornadic. Florida seems to have the most activity.") + scale_color_manual(values = c("Shark" = "skyblue", "Waterspout" = "blue")) 

# Hawaii 

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  theme_bw() +  
  geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe) +
  geom_sf(aes(geometry = geometry), color = 'skyblue', alpha = 0.5, size = 0.2, data = shark_hawaii) +
  coord_sf(xlim = c(-170, -150), ylim = c(18, 30)) + 
  geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), fill = 'skyblue',alpha = 0.5, size = 0.5, data = shark_dataframe) +
  geom_point(aes(x = `Station Longitude`, y = `Station Latitude`, color = 'Shark'), fill = 'skyblue', alpha = 0.5, size = 0.6, data = shark_survey_dataframe) +
  geom_segment(data = tornadic_waterspout_dataframe,aes(x = BEGIN_LON, y = BEGIN_LAT, 
                                               xend = END_LON, yend = END_LAT, color = "Waterspout"),
               arrow = arrow(length = unit(0.05, "cm"))  # Optional arrow
  ) +
  geom_point(data = tornadic_waterspout_dataframe, aes(x = BEGIN_LON, y = BEGIN_LAT, color = "Waterspout"), 
             shape = 15,  # Square shape
             size = 0.1) +
  labs(title = "US Tornadic Waterspouts and Tiger Sharks Along Hawaii Coastlines",
       subtitle = '(2020-2024)',
       x = "Longitude",
       y = "Latitude",
       tag = "Figure 3",
       caption = "Although many sharks surround Hawaii, no tornadic waterspouts have formed at all.",
       color = "Legend") + scale_color_manual(values = c("Shark" = "skyblue", "Waterspout" = "blue")) 

```

## Tornadoes that are strong enough to carry the weight of sharks do not typically form near the coasts.

Visualization of the distribution of tornadoes shows that tornadoes with enough strength to pull sharks from the depths of the water form near enough to the coastlines to cause "shark-terror." In the United States, EF1 and EF2 tornadoes are very common and form throughout the Midwest and Southeast the most. EF3 tornadoes appear throughout the Midwest and Southwest as well, although they are less common. These three types of tornadoes all seem to be the most common that occur on the coasts of the United States as well. EF4 and EF5 tornadoes on the other hand, are not that common (see Figure 4). In our data, there is no data recorded for an EF5 tornado, making them the least common among them all. Our analysis did not have any tornadoes appear in Hawaii (see Figure 5).

Tornadoes with less potential are more common throughout the United States. There seems to be an inverse relationship with EF Scale and Count of Tornadoes.

```{r, echo = F, warning = F, message = F}
#| label: Simplified Tornado and Shark Color Scheme

custom_colors <- c(
  "EF1" = "red", 
  "EF2" = "orange", 
  "EF3" = "darkgreen", 
  "EF4" = "purple", 
  "EF5" = "pink", 
  "Shark" = "skyblue"
)

```

```{r, echo = FALSE, warning=FALSE}
#| label: Path of Tornadoes in the US

# Now let's see the path of tornadoes in the US
ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_sf(data = coastal_dataframe, aes(geometry = geometry), color = 'red') +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 55)) + 
  
  geom_point(data = shark_dataframe, 
             aes(x = Longitude, y = Latitude, color = "Shark"), 
             alpha = 0.5, size = 0.5) +
  geom_point(data = shark_survey_dataframe, 
             aes(x = `Station Longitude`, y = `Station Latitude`, color = "Shark"), 
             alpha = 0.5, size = 0.6) +
  geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), alpha = 0.5, size = 0.6, data = shark_incidents_california) +

  geom_point(data = tornado_only_2020_2024_clean_dataframe, 
             aes(x = BEGIN_LON, y = BEGIN_LAT, color = TOR_F_SCALE), 
             shape = 15, size = 1) +

  scale_color_manual(
    values = custom_colors,
    breaks = c("EF1", "EF2", "EF3", "EF4", "EF5", "Shark"),
    name = "Legend"
  ) +
  labs(title = "Tornadoes and Sharks Along The Coasts of the United States",
       subtitle = "(2020-2024)",
       x = "Longitude",
       y = "Latitude",
       tag = "Figure 4",
       caption = "The weaker a tornado, the more common it is.")

# Hawaii 

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_sf(data = coastal_dataframe, aes(geometry = geometry), color = 'red') +
  geom_sf(aes(geometry = geometry, color = 'Shark'), alpha = 0.5, size = 0.2, data = shark_hawaii) +

  coord_sf(xlim = c(-170, -150), ylim = c(18, 30)) +
  

  geom_point(data = tornado_only_2020_2024_clean_dataframe, 
             aes(x = BEGIN_LON, y = BEGIN_LAT, color = TOR_F_SCALE), 
             shape = 15, size = 1) +

  scale_color_manual(
    values = custom_colors,
    breaks = c("EF1", "EF2", "EF3", "EF4", "EF5", "Shark"),
    name = "Legend"
  ) +
  labs(title = "Tornados and Tiger Sharks Along Hawaii Coastlines",
       subtitle = "(2020-2024)",
       x = "Longitude",
       y = "Latitude",
       tag = "Figure 5",
       caption = "A tornado seems to be very uncommon around this shark-surrounded state.")

```

To better illustrate the EF Scale and Tornado Count Relationship (see Figure 6). Further analysis from this point on will disregard tornadoes with an EF Scale lower than or equal to 3, as these don't have the potential to even toss cars carelessly.

```{r, echo = F, warning= F, message = F}
ggplot(tornado_only_2020_2024_clean_dataframe, aes(x = TOR_F_SCALE, fill = TOR_F_SCALE)) +
  geom_histogram(stat = 'count') +
  theme_minimal() +

  scale_color_manual(
    values = custom_colors,
    breaks = c("EF1", "EF2", "EF3", "EF4", "EF5"),
    name = "Legend"
  ) +
  
  labs(title = "Tornado Frequency by EF Scale (2020–2024)",
       x = "Tornado EF Score",
       y = "Count",
       fill = "EF Scale", 
       tag = "Figure 6",
       caption = "On the powerful side: There are 31 EF4 and 0 EF5 Tornadoes."
  )
```

Only considering tornadoes with an EF Score greater than 3, a clearer view at the distribution of EF4 and EF5 tornadoes show that most do not tend to form near the coastlines. There are a few exceptions, yet these still are not close enough to the ocean waters to haul sharks from their habitat (See Figure 7).

```{r, echo = F, message = F, warning = F, output = F}
#| label: more tornado cleaning

strong_tornadoes <- tornado_only_2020_2024_clean_dataframe %>% 
  filter(TOR_F_SCALE == "EF4" | TOR_F_SCALE == "EF5")

```

```{r, echo =F , warning = F, message = F}
# US Map again, but only those >= EF4

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_sf(data = coastal_dataframe, aes(geometry = geometry), color = 'red') +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 55)) + 
  
  geom_point(data = shark_dataframe, 
             aes(x = Longitude, y = Latitude, color = "Shark"), 
             alpha = 0.5, size = 0.5) +
  geom_point(data = shark_survey_dataframe, 
             aes(x = `Station Longitude`, y = `Station Latitude`, color = "Shark"), 
             alpha = 0.5, size = 0.6) +
  geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), 
             alpha = 0.5, size = 0.6, data = shark_incidents_california) +
  
  geom_point(data = strong_tornadoes, 
             aes(x = BEGIN_LON, y = BEGIN_LAT, color = TOR_F_SCALE), 
             shape = 15, size = 1) +

  scale_color_manual(
    values = custom_colors,
    breaks = c("EF1", "EF2", "EF3", "EF4", "EF5", "Shark"),
    name = "Legend"
  ) +
  labs(title = "EF4 Tornadoes and Sharks of the United States",
       subtitle = "(2020-2024)",
       x = "Longitude",
       y = "Latitude",
       tag = "Figure 7",
       caption = "Only the Southeast Coast seems to have any occurrences of these tornadoes.")
```

It seems if a sharknado were to form, it would occur in the Southeast Coast, near Alabama and the Gulf of Mexico. Yet, these tornadoes are still not near enough to the ocean and any population of sharks. See Figure 8 for a closer inspection.

```{r, echo = F, message = F, warning = F}

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe) +
  coord_sf(xlim = c(-97, -77), ylim = c(23, 33)) +
  geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), 
             alpha = 0.5, size = 0.5, data = shark_dataframe) +
  geom_point(aes(x = `Station Longitude`, y = `Station Latitude`, color = 'Shark'), 
             alpha = 0.5, size = 0.6, data = shark_survey_dataframe) +
  geom_point(data = strong_tornadoes, 
             aes(x = BEGIN_LON, y = BEGIN_LAT, color = TOR_F_SCALE),
             shape = 15, size = 1) +
  scale_color_manual(values = custom_colors,
                     breaks = c("EF1", "EF2", "EF3", "EF4", "EF5", "Shark"),
                     name = "Legend") + 
  theme_minimal() +
  labs(title = "US Tornadoes and Sharks Along The Gulf of Mexico",
       x = "Longitude",
       y = "Latitude", 
       tag = 'Figure 8',
       caption = 'There is a small amount of EF4 tornadoes and 0 EF5 tornadoes that are close to the coasts.')


# ## ALASKA
# ggplot(world) +
#   geom_polygon(data = world, aes(x = long, y = lat, group = group), 
#                fill = "gray", color = "black") +
#   geom_polygon(data = states, aes(x = long, y = lat, group = group), 
#                fill = "gray", color = "black") +
#   geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe) +
#   coord_sf(xlim = c(-220, -130), ylim = c(50, 80)) +
#   geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), 
#              alpha = 0.5, size = 0.5, data = shark_dataframe) +
#   geom_point(aes(x = `Station Longitude`, y = `Station Latitude`, color = 'Shark'), 
#              alpha = 0.5, size = 0.6, data = shark_survey_dataframe) +
#   geom_point(data = tornado_only_2020_2024_clean_dataframe, 
#              aes(x = BEGIN_LON, y = BEGIN_LAT, color = TOR_F_SCALE),
#              shape = 15, size = 1) +
#   scale_color_manual(values = custom_colors,
#                      breaks = c("EF1", "EF2", "EF3", "EF4", "EF5", "Shark"),
#                      name = "Legend") + 
#   theme_minimal() +
#   labs(title = "US Tornadoes and Sharks Along The Gulf of Mexico",
#        x = "Longitude",
#        y = "Latitude", 
#        tag = 'Figure 8',
#        caption = 'There is a small amount of EF4 tornadoes and 0 EF5 tornadoes that are close to the coasts.')

# gulf_coastal <- ggplot(world) +
#   geom_polygon(data = world, aes(x = long, y = lat, group = group), 
#                fill = "gray", color = "black") +
#   geom_polygon(data = states, aes(x = long, y = lat, group = group), 
#                fill = "gray", color = "black") +
#   theme_bw() +  
#   geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe) +
#     geom_sf(aes(geometry = geometry, color = TOR_F_SCALE), data = coastal_tornado_points) +
#   coord_sf(xlim = c(-97, -77), ylim = c(23, 33)) + 
#   geom_point(aes(x = Longitude, y = Latitude, color = 'Shark'), 
#              alpha = 0.5, size = 0.5, data = shark_dataframe) +
#   geom_point(aes(x = `Station Longitude`, y = `Station Latitude`, color = 'Shark'), 
#              alpha = 0.5, size = 0.6, data = shark_survey_dataframe) +
#   scale_color_manual(values = custom_colors,
#                      breaks = c("EF1", "EF2", "EF3", "EF4", "EF5", "Shark"),
#                      name = "Legend") + 
#   theme_minimal() +
#   labs(title = "US Tornadoes and Sharks Along The Gulf of Mexico",
#        x = "Longitude",
#        y = "Latitude", 
#        tag = 'Figure 8',
#        caption = 'There is a small amount of EF4 tornadoes and 0 EF5 tornadoes that are close to the coasts.')
# 
# gulf_coastal


```

```{r, echo = FALSE, warning = F, message = F}
#| label: joining lat and long tornado points to sf coastal data

second_observed_proportion <- 31/3831 ;

tornado_points_sf <- st_as_sf(tornado_only_2020_2024_clean_dataframe, coords = c("BEGIN_LON", "BEGIN_LAT"), crs = 4326)
tornado_points_sf <- st_transform(tornado_points_sf, crs = st_crs(coastal_dataframe))

# keeping only points that are inside of the spatial coastal data
coastal_tornado_points <- tornado_points_sf %>%
  st_join(coastal_dataframe, join = st_within, left = FALSE)

observed_proportion_of_EF4 <- sum(coastal_tornado_points$TOR_F_SCALE == "EF4", na.rm = TRUE)/nrow(coastal_tornado_points)


```

These illustrations show that effective tornadoes are typically going to form on the coasts. In fact, the proportion of these tornadoes greater than EF3 that formed on the coastal data plotted is `r observed_proportion_of_EF4`. This is from 2 tornadoes from the 473 total tornadoes that fall inside the coastline. From the entire dataset, the probabilty a tornado is greater than EF3 is 31/3831 or `r second_observed_proportion`. This is just from our one sample of analysis.

## Assuming perfect conditions, it is still unlikely that capable tornadoes can form close enough to the coasts to become a sharknado.

Given these drastic, theoretical assumptions:

-   All EF4 or higher tornadoes that form within the data's coastal perimeters will become sharknados

Using bootstrap sampling with replacement, our analysis suggests that there is a non-negligible long-run probability of dominant tornadoes forming near the coasts. Based on our data, there is not enough coastal tornadoes occur to plausibly support the hypothetical threat of a "sharknado." An observed bootstrapped proportion of EF4 tornadoes becoming sharknados is found to be 0.081 (See Figure 9).  

```{r, echo = FALSE, warning = FALSE}
#| label: Bootstrap Sampling

tornado_only_EFs <- tornado_2020_2024_clean_dataframe %>% 
  filter(TOR_F_SCALE %in% c("EF0", "EF1", "EF2", "EF3", "EF4", "EF5"))


# Store the bootstrap results
bootstrap_proportions <- data.frame(sim=1:1000,stat=NA)
coastal_tornado_points_bootstrap <- coastal_tornado_points

set.seed(1)
for (i in 1:1000) {
  
  # Randomize the TOR_F_SCALE to all other tornadoes, keeps the lat and long pts the same
  coastal_tornado_points_bootstrap$TOR_F_SCALE_shuffled <- sample(tornado_points_sf$TOR_F_SCALE, size = 473, replace = TRUE)
  
  # Calculate proportion of EF4s in bootstrapped sample
  prop_ef4_bootstrap <- (sum(coastal_tornado_points_bootstrap$TOR_F_SCALE_shuffled == "EF4") + sum(coastal_tornado_points_bootstrap$TOR_F_SCALE_shuffled == "EF5")) / nrow(tornado_points_sf)
  
  # Record the proportion of ef4 tornaodes in that sample and then repeat the process
  bootstrap_proportions$stat[i] <- prop_ef4_bootstrap

}

mean_boot <- mean(bootstrap_proportions$stat)
# nrow(tornado_only_2020_2024_clean_dataframe)

```

```{r, echo = F, message = F, warning = F}

boot.hist<-ggplot(bootstrap_proportions, aes(stat)) + geom_histogram(binwidth = 0.0001) +
  geom_vline(xintercept = mean_boot, color = "red", linetype = "dashed") + 
    geom_vline(xintercept = observed_proportion_of_EF4, color = "blue", linetype = "dashed") + 
  labs(title = "Histogram of Bootstrapped Proportion of EF4 Tornadoes",
       x = "Observed Bootstrapped Proportion of EF4 Tornadoes", 
       y = "Frequency", 
       tag = "Figure 9",
       caption = "Red Dashed Line is Bootstrapped Average: 0.0009966, Blue Dashed Line is Observed Average: 0.0021") + 
  theme(plot.caption.position = "plot",
        plot.caption = element_text(hjust = 0))
boot.hist
ggsave("bootstrap_histogram.png", plot = boot.hist, width = 7, height = 5)
```

```{r, echo =F, message = F, warning = F, output = F}
#| label: p-value shenanigans

sdboot <- sd(bootstrap_proportions$stat)
pvalue <- 1 - pnorm(observed_proportion_of_EF4, mean = mean_boot, sdboot)
pvalue
# 
# shape <- mean_boot^2 / sdboot^2
# scale <- sdboot^2 / mean_boot
# 
# 
# 1 - pgamma(observed_proportion_of_EF4, shape = shape, scale = scale); pvalue
# 
# pnorm(observed_proportion_of_EF4, mean = mean_boot, sd = sdboot)

# #Put in rank order#
# rankdiff<-sort(bootstrap_proportions$stat)
# 
# #Print out just the first few#
# head(rankdiff)
# 
# #Lower endpoint is the 5th percentile (90% confidence)#
# lower<-rankdiff[25]
# lower
# 
# #Upper endpoint is the 95th percentile (90% confidence)#
# upper<-rankdiff[975]
# upper
# 
# 
# #98% confidence level#
# lower98<-rankdiff[10]
# lower98
# 
# upper98<-rankdiff[990]
# upper98

```
Assuming the bootstrapped proportions follow an approximately normal distribution, the probability that there are averages greater than the observed average of `r observed_proportion_of_EF4`, a p-value of `r pvalue` is found. This provides us enough evidence to deny any imminent threat of sharknados.  