---
title: "Methods"
editor: visual
---

# Load Neccessary Libraries

Throughout the statistical , many R packages were used. There were three packages used to read in data, these being the readr and readxl packages which were used to read in common data formats such as .csv and .xlsx, while the sf package was used primarily for spatial data such as .shp and .kml files. The sf package was used to perform some data wrangling on spatial data as well. Other packages for data wrangling, cleaning, and manipulation were the dplyr, tidyverse, and stringr. The ggplot2 package was used to help make well designed charts and maps with accompanying titles, captions, and tags. With the use of ggplot(), the maps and mapdata packages were loaded in order to create maps of the United States, the West Coast, the Gulf of Mexico and East Coast, as well as Hawaii. Lastly, the knitr and patchwork packages were utilized to create better looking tables and charts in the quarto document. 

```{r, echo=FALSE, output=FALSE, message = F, warning = F}
#| label: Load neccessary libraries 
library(ggplot2)
library(readr)
library(readxl)
library(sf)
library(dplyr)
library(tidyverse)
library(stringr)
library(mapdata)
library(maps)
library(knitr)
library(patchwork)
```

# Shark Data

Four shark datasets were used in this business report. Three come from trusted government agencies and report a survey of sharks tagged in the Gulf of Mexico, Florida, and Hawaii. The fourth one differs from the rest, being that it is data recorded on shark incidents in California.

## Cleaning Shark Data

Not much data wrangling was needed to prepare for shark distribution plotting. However, in California's shark incident dataset, empty longitude and latitude were removed. 

# Tornado Data

Five datasets from the past 5 years as of 2025, each containing information for a different year, were analyzed in this report. All datasets were taken from the same source, National Oceanic and Atmospheric Association (NOAA).

The reasoning behind only including data from the past five years is climate change and recent weather activity. Modern tornado data is more valuable to be analyzed in this report due to modern weather trends. So, even with NOAA offering data recorded starting from the year 1950, only current data was implemented to be analyzed. 

```{r, echo=FALSE, output=FALSE, message = F, warning = F}
#| label: Load Tornado Data from NOAA
tornado_2020_2024_dataframe <- bind_rows(
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2024_c20250216.csv"),
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2023_c20250216.csv"), 
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2022_c20241121.csv"), 
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2021_c20240716.csv"), 
  read_csv("Datasets/Tornado_Datasets/StormEvents_details-ftp_v1.0_d2020_c20240620.csv"))
```

## Cleaning Tornado Data

The storm events included in this dataset ranged from avalanches to thunderstorms. Due to interest only being in the events: Tornadoes and Waterspouts, all other unneccessary events were filtered out and removed from the data. These two events were then categorized in their own dataset. 

In the waterspout dataset, the latter, less powerful fair weather waterspouts were removed in order to evaluate tornadic waterspouts. For this to be done, in the data's 'Event Narrative' columns, where they include a brief summary on the event, only cases where the string *"tornad"* were selected, as this string would keep observations that discussed waterspouts that either: Were tornadic waterspouts or transformed into tornadoes. 

For the filtered tornado dataset, observations where the EF Score of a tornado was "EFU" meaning unknown were removed in order to keep tornadoes with a properly rated EF Scale. 

In both filtereed datasets, rows wth 'NA' values in thier beginning and ending latitude and longitude values were excluded. 

```{r, echo=FALSE, output=FALSE, message = F, warning = F}
#| label: Cleaning Tornado Data
# Remove rows containing NA values and Keep the two events we are interested in
tornado_2020_2024_clean_dataframe <- tornado_2020_2024_dataframe %>% 
  drop_na(BEGIN_LAT, BEGIN_LON, END_LON, END_LAT) %>% 
  filter(str_detect(EVENT_TYPE, "Tornado") | str_detect(EVENT_TYPE, "Waterspout"))
                                        
# Filter for Waterspouts
waterspout_dataframe <- tornado_2020_2024_clean_dataframe %>%
  filter(EVENT_TYPE == 'Waterspout')

# Filter for tornadic waterspouts
tornadic_waterspout_dataframe <- waterspout_dataframe %>%
  filter(str_detect(EVENT_NARRATIVE, 'tornad') | str_detect(EVENT_NARRATIVE, 'Tornad'))

# tornadoes only 
tornado_only_2020_2024_clean_dataframe <- tornado_2020_2024_dataframe %>% 
  drop_na(BEGIN_LAT, BEGIN_LON, END_LON, END_LAT) %>% 
  filter(EVENT_TYPE == 'Tornado') %>% 
  filter(TOR_F_SCALE %in% c('EF1', 'EF2', 'EF3', 'EF4', 'EF5'))
```

# Coastal Data 

Coastal data for the United States was taken from the United States Geological Survey (USGS). This data set included data plotting the borders of U.S. coasts as well as U.S. territories, the latter was rejected for this report. 

## Preparing Coastal Data for Plotting Maps

In order to overlay what parts our coastal data define the coasts in the United States, a plot consisting of both coordinate and spatial data was made.

The way to plot the coasts differed due to the data being spatial. The sf package was used to highlight (what the dataset considered) the coasts with a red outline. The coordinates were changed to make maps of the following regions: United States, The Southeast and Gulf of Mexico, The West Coast, and Hawaii.

This processed gave us the maps to be plotting shark and tornadoes with. 

```{r, echo=FALSE, output=FALSE, message = F, warning = F}
#| label: Loading In Coastal Data
# coastal data
coastal_dataframe <- 
  read_sf("Datasets/Coastal Datasets/CZMP_counties_2009/CZMP_counties_2009.shp")

```

```{r, echo=FALSE, output=FALSE, message = F, warning = F}
#| label: Getting the map to work
# Let's add a world map to see where those other coasts are from
world <- map_data('world')
states <- map_data('state')

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  theme_bw() +  
  geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe)
```

```{r, echo=FALSE, output=FALSE, message = F, warning = F}
#| label: Getting a US Map
# Let's look at the US individually first, then Hawaii, then Alaska

ggplot(world) +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  geom_polygon(data = states, aes(x = long, y = lat, group = group), 
               fill = "gray", color = "black") +
  theme_bw() +  
  geom_sf(aes(geometry = geometry), color = 'red', data = coastal_dataframe) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 55))

```

# Comparing Waterspouts to Tornadoes

Tornadoes and waterspouts are classified as two different events. Both fit one of the requirements for a sharknado: The event must form over *or* near shark-inhabited waters. However, there is no simple, concrete way to measure the power scale of waterspouts. Therefore, an oversimplified way to check how much damage they are capable of is to look at the average cost of property each event has caused in our sample. 

The following data wrangling was needed in order to get a clean chart comparing the averages. The data's property damage column was formatted as 100K or 1M, meaning $100,000 and $1,000,000. To combat this, rows with the letters K or M in the "DAMAGE_PROPERTY" column were multiplied by 1000 and 10000000. This prepared the property damage to be averaged out and listed in a chart using ggplot() from the ggplot2 packge. 

# Plotting Waterspouts

When plotting waterspouts, only the tornadic waterspouts were considered, as these are more related to tornadoes and cause a much bigger disruption than fair weather waterspouts. In ggplot(), geom_segment() was used to plot the beginning and end points of waterspouts, to see if they'd move inland. Although some do, most do not move a noticeable distance away from there beginning coordinates, and if they do, they do not make landfall.

# Plotting Tornadoes

When plotting tornadoes, it is a very similar process to plotting waterspouts. In this situation, we only want tornadoes as our EVENT_TYPE. In the beginning, using geom_segment() was considered when plotting tornadoes, however, this caused the map to become more bloated than it already is, so it has been commented out in the code.

# Plotting Only Coastal Tornadoes

In this report, a 'coastal tornado' is defined as a tornado that falls inside the coordinates of the multipolygon coastal spatial data plotted. Some implications arise from this however that will be discussed later.

To first plot the coastal tornadoes, the tornadoes coordinate data points were joined with the coastal spatial data polygons. The tornado points were transformed into spatial data via st_transform() from the 'sf' package. Then with the st_join() from the same package, we can finally filter all the points inside the coastal regions like we want. Here, the observed proportion of EF4 and EF5 tornadoes on the coasts was also found and it will be shown in the results.

Once a a dataframe with the coastal observations wanted is achieved, the process to plot them on a map is similar to before using ggplot().

# Bootstrap Sampling

This process was very complex. We assume that the null hypothesis states that each category of tornado: EF1, EF2,...,EF5, all appear equally. This gives us a p-value of 0.2 (There are 5 values and each appear evenly). Under this assumption, 1000 bootstrap samples were taken. At first, the points were filtered out to only include coastal tornadoes, but this process made the rendering unbearably long. Therefore, it was commented out, and we assume that the 473 observations sampled each time in 1 bootstrap sample are the coastal tornadoes. This is because if each data point is having their EF scale randomized with replacement, the points will not be of importance, rather the proportion of the amount of times an EF4 or EF5 tornado appears in a bootstrap sample is more important. A problem with this is there are no EF5 tornadoes in our data, but this is discussed as well later.

A histogram is made to show the distribution of the bootstrapped proportions, with a red dashed line showing the null p-value of 0.2. To see if our observed probability is based off random chance under the null,the mean of all the bootstrapped proportions is compared against the null p-value. If a p-value below 0.05 is recorded, we have enough evidence to reject the null and say EF4 and EF5 tornadoes are very unlikely to occur on the coasts of America.


